#!/usr/bin/python

import sys
import subprocess
import json
import os
import re

image_re = re.compile("(.+?)/(.+?):(.+)")

backends = []
vhosts = []
id = subprocess.check_output(["doid", "varnish"]).rstrip()
output = subprocess.check_output(["docker", "ps", "-notrunc"])
output = output.split("\n")
for line in output[1:]:
	cols = line.split("   ")

	if len(cols) > 1 and len(cols[1]) > 0:
		match = image_re.match(cols[1])
		if match:
			repo, image, tag = match.groups()
			esc_re = re.compile("[^\w]")
			esc_image = esc_re.sub("_", image)
			backends.append("backend %s {\n  .host = \"%s\";\n  .port = \"80\";\n}" % (esc_image, image))
			vhosts.append("  else if (req.http.host ~ \"(?i)^%s\\.docker\\.giantmonkey\\.de$\" || req.http.host ~ \"(?i)^%s\\.g\\.giantmonkey\\.de$\") {\n    set req.backend = %s;\n  }" % (image, image, esc_image))

path = "/var/lib/docker/containers/%s/rootfs/etc/varnish/default.vcl" % id

old = open(path).read()
old_backends = re.findall(r"# DOCKER BACKEND START.*# DOCKER BACKEND END", old, re.MULTILINE | re.DOTALL)[0] 
new_backends = "# DOCKER BACKEND START\n" + "\n".join(backends) + "\n# DOCKER BACKEND END"
old_vhosts = re.findall(r"  # DOCKER VHOST START.*  # DOCKER VHOST END", old, re.MULTILINE | re.DOTALL)[0]
new_vhosts = "  # DOCKER VHOST START\n" + "\n".join(vhosts) + "\n  # DOCKER VHOST END"
new = old.replace(old_backends, new_backends);
new = new.replace(old_vhosts, new_vhosts);

file = open(path, "w")
file.write(new)
file.close()

print "Replaced backends and vhosts in varnish config of container %s" % id
print new_backends
print new_vhosts
